{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,SACpCC,EAAWF,SAASC,cAAc,UA+BxC,SAASE,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACTV,EAASW,UAAW,EAChBP,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MAzCPN,EAAWe,iBAAiB,UAE5B,SAAsBC,GACpBA,EAAEC,iBACFd,EAASW,UAAW,EAEpB,IAAgCI,EAAAF,EAAEG,cAAcC,SAAxCd,EAAwBY,EAAxBZ,MAAOe,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,QASvB,SAAkCC,GAGhC,I,IAHkCC,EAAFD,EAAEC,UAAWC,EAAbF,EAAaE,SAAUC,EAAvBH,EAAuBG,WAG9CC,EAAW,EAAGA,GAAYD,EAAYC,IAE7CvB,EAAcuB,EADHH,EAAYC,GAAYE,EAAW,IAE3CC,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,M,OACjBR,EAAAgC,OAAOC,QAAQ,qBAAoCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,UAE1D2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,M,OAClBR,EAAAgC,OAAOI,QAAQ,oBAAmCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,UAb9D6B,CALW,CACTX,WAAYlB,EAAM8B,MAClBX,UAAWJ,EAAKe,MAChBV,YAAaJ,EAAOc,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst submitForm = document.querySelector('.form');\nconst btnStart = document.querySelector('button');\nsubmitForm.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  btnStart.disabled = true;\n\n  const { delay, step, amount } = e.currentTarget.elements;\n  const el = {\n    dataDelay: +delay.value,\n    dataStep: +step.value,\n    dataAmount: +amount.value,\n  };\n  outputMessagesByPosition(el);\n}\n\nfunction outputMessagesByPosition({ dataDelay, dataStep, dataAmount }) {\n  let newDelay;\n\n  for (let position = 1; position <= dataAmount; position++) {\n    newDelay = dataDelay + dataStep * (position - 1);\n    createPromise(position, newDelay)\n      .then(({ position, delay }) =>\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n      );\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      btnStart.disabled = false;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$submitForm","document","querySelector","$ce04d3a99e08e73b$var$btnStart","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","disabled","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","param1","dataDelay","dataStep","dataAmount","position1","then","param","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$outputMessagesByPosition","value"],"version":3,"file":"03-promises.2136ad07.js.map"}